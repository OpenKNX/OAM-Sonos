;
; global custom
;
[custom]
debug_build_flags =
  -O3
build_flags =
  ${KNX_TP.build_flags}
  -D KNX_FLASH_CALLBACK
#lib_deps =


[custom_develop]
extends = custom
build_flags =
  ${custom.build_flags}
  -D OPENKNX_HEARTBEAT
  ; ; -D OPENKNX_HEARTBEAT_PRIO
  ; -D DEBUG_LOOP_TIME=10 ; will print a info when a loop took more than x ms.
  ; -D LOGIC_TRACE
  ; ; to see trace logs, they must match one of the 5 filters (TRACE_LOG1 .. TRACE_LOG2)
  ;"-D OPENKNX_TRACE1=Sonos.*"
  ;"-D OPENKNX_TRACE2=Logic.*"
  ;"-D OPENKNX_TRACE3=*.*"
  ; -D OPENKNX_RTT
  ; -D BUFFER_SIZE_UP=10240
; RP2040
[RP2040_custom]
extends = RP2040, custom
build_flags =
  -D SERIAL_DEBUG=Serial

[env:develop_RP2040]
extends = RP2040_develop, RP2040_custom, custom_develop

build_flags =
  ${RP2040_develop.build_flags}
  ${RP2040_custom.build_flags}
  ${custom_develop.build_flags}

[env:develop_REG1_ETH]
extends = env:develop_RP2040
build_flags =
  ${env:develop_RP2040.build_flags}
  -D OKNXHW_REG1_ETH
  -D OPENKNX_DUALCORE

[env:develop_REG1_ETH_USB]
extends = env:develop_REG1_ETH, RP2040_UPLOAD_USB

; Releases
[env:release_REG1_ETH]
extends = RP2040_releases, RP2040_custom, RP2040_UPLOAD_USB
build_flags =
  ${RP2040_releases.build_flags}
  ${RP2040_custom.build_flags}
  ${custom.build_flags}  
  -D OKNXHW_REG1_ETH
  -D OPENKNX_DUALCORE
  
[env:release_DEV_BOARD]
extends = RP2040_releases, RP2040_custom, RP2040_EXCHANGE_2MB, RP2040_UPLOAD_USB
build_flags =
  ${RP2040_releases.build_flags}
  ${RP2040_custom.build_flags}
  ${RP2040_EXCHANGE_2MB.build_flags}
  ${custom.build_flags}
  -D OKNXHW_REG1_ETH
  -D OPENKNX_DUALCORE
  